pipeline {
    agent {
        label 'node-01'
    }

    environment {
        Instance_IP = '172.31.37.45'
        ServerName = 'ubuntu'
        AWS_REGION = 'eu-west-2'
        ECR_REPO = 'pat-jenkins-repo'
        REGISTRY_URL = "442042522885.dkr.ecr.eu-west-2.amazonaws.com"
    }

    stages {
        stage ('docker_build') {
            steps {
                script {
                    echo "Building Moodle Docker Image"
                    sh "docker build -t ${env.REGISTRY_URL}/${env.ECR_REPO}:${BUILD_NUMBER} ."
                }
            }
        }

        stage ('push_image_to_ecr') {
            steps {
                script {
                    echo "Pushing Moodle Docker Image to ECR"
                    withAWS(region: "${env.AWS_REGION}", credentials: 'AWSACCESS') {
                        sh "aws ecr get-login-password --region ${env.AWS_REGION} | docker login --username AWS --password-stdin ${env.REGISTRY_URL}"
                        sh "docker push ${env.REGISTRY_URL}/${env.ECR_REPO}:${BUILD_NUMBER}"
                    }
                }
            }
        }

        stage('deploy_to_ec2') {
            steps {
                script {
                    echo "Deploying docker compose to EC2 Server"
                    withAWS(region: "${env.AWS_REGION}", credentials: 'AWSACCESS') {
                        sshagent(['ec2sshkey']) {
                            sh """
                                # Copy docker compose file to EC2
                                scp -o StrictHostKeyChecking=no compose.yaml ${ServerName}@${Instance_IP}:/home/ubuntu

                                # Deploy on EC2
                                ssh -o StrictHostKeyChecking=no ${ServerName}@${Instance_IP} '
                                    export IMAGE_NAME=${REGISTRY_URL}/${ECR_REPO}:${BUILD_NUMBER}
                                    aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${REGISTRY_URL}
                                    docker compose -f /home/ubuntu/compose.yaml down --volumes 
                                    docker compose -f /home/ubuntu/compose.yaml up -d
                                '
                            """
                        }
                    }
                }
            }
        }

        // stage ('deploy_to_ec2') {
        //     steps {
        //         script {
        //             echo "Deploying docker compose to EC2 Server"
        //              sshagent(['ec2sshkey']) {
        //                 sh """
        //                    # Copy docker compose file to EC2
        //                    scp -o StrictHostKeyChecking=no compose.yaml ${ServerName}@${Instance_IP}:/home/ubuntu

        //                    # Pulling Images from ECR
        //                    ssh -o StrictHostKeyChecking=no ${ServerName}@${Instance_IP} "
        //                       export IMAGE_NAME=${env.REGISTRY_URL}/${env.ECR_REPO}:${BUILD_NUMBER} && \
        //                       aws ecr get-login-password --region ${env.AWS_REGION} | docker login --username AWS --password-stdin ${env.REGISTRY_URL} && \
        //                       docker compose -f /home/ubuntu/compose.yaml up -d
        //                     "
        //                 """
        //             }
        //         }
        //     }
        // }
    }
}